/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-20 00:34:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Book;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1686902562165L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1686902562157L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Book");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	//リクエストスコープからbook情報を取得
	Book book = (Book) request.getAttribute("book");

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>書籍管理システム</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- header.jspインクルード -->\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t\t<title>書籍管理メニュー画面</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<h1 style=\"text-align:center; padding-top: 20px; padding-bottom: 10px;\"><a style=\"color: #000; text-decoration: none;\" href=\"");
      out.print(request.getContextPath() );
      out.write("/view/menu.jsp\">書籍管理システムweb版ver.2.0</a></h1>\r\n");
      out.write("\t\t<hr style=\"text-align:center; height:5px; background-color:blue; width:950px\">\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<table style=\"margin: auto; width: 850px\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td style=\"text-align: center; width: 90px\">[<a href=\"");
      out.print(request.getContextPath());
      out.write("/view/menu.jsp\">メニュー</a>]\n");
      out.write("\t\t</td>\n");
      out.write("\t\t\t<td style=\"text-align: center; width: 90px\">[<a href=\"");
      out.print(request.getContextPath());
      out.write("/view/insert.jsp\">書籍登録</a>]\n");
      out.write("\t\t</td>\n");
      out.write("\t\t\t<td style=\"text-align: center; width: 90px\">[<a href=\"");
      out.print(request.getContextPath());
      out.write("/list\">書籍一覧</a>]\n");
      out.write("\t\t</td>\n");
      out.write("\t\t\t<td style=\"text-align: center; width: 320px; font-size: 24px; color: #800000;\">書籍変更</td>\n");
      out.write("\t\t\t<td style=\"width: 90px\">&nbsp;</td>\n");
      out.write("\t\t\t<td style=\"width: 90px\">&nbsp;</td>\n");
      out.write("\t\t\t<td style=\"width: 90px\">&nbsp;</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\n");
      out.write("\t<hr style=\"text-align: center; height: 2px; background-color: #008000; width: 950px\">\n");
      out.write("\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/update\" style=\"margin: 70px auto 200px auto; display: flex; flex-direction: column; align-items: center; justify-content: space-between; height: 180px;\">\n");
      out.write("\t\t<div style=\"display: flex; justify-content: space-between; width: 480px;\">\n");
      out.write("\t\t\t<table style=\"text-align: center; width: 210px; height: 50px\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td style=\"text-align: right; color: #800000\" ; colspan=\"3\"><<変更前情報>></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td style=\"background-color: #C0C0C0;\">ISBN</td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(book.getIsbn());
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td style=\"background-color: #C0C0C0;\">TITLE</td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(book.getTitle());
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td style=\"background-color: #C0C0C0;\">価格</td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(book.getPrice());
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center; color: #800000\";><<変更後情報>></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(book.getIsbn());
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td><input type=text size=\"25\" name=\"title\" value=\"");
      out.print(book.getTitle());
      out.write("\"></input></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td><input type=text size=\"25\" name=\"price\" value=\"");
      out.print(book.getPrice());
      out.write("\"></input></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<input type=\"hidden\" name=\"isbn\" value=\"");
      out.print(book.getIsbn());
      out.write("\">\n");
      out.write("\t\t<input type=\"submit\" value=\"変更完了\">\n");
      out.write("\t</form>\n");
      out.write("\n");
      out.write("\t<!-- footer.jspインクルード -->\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div style=\"position: absolute; bottom: 0; padding-bottom: 20px; left: 50%; -webkit-transform: translate(-50%, -50%);\">\r\n");
      out.write("\t\t\t<hr style=\"text-align:center; height:5px; background-color:blue; width:950px\">\r\n");
      out.write("\t\t\t<table  style=\"margin:auto; border:0; width:950px\">\r\n");
      out.write("\t\t\t\t<tr><td>Copyright (c) 20YY all Rights Reserved.</td></tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
